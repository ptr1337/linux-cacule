From 4508adf2ff479f4dda42969132833fd13f8b61a9 Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Wed, 11 Mar 2020 20:29:17 +0100
Subject: [PATCH 3/5] Revert "block, bfq: get extra ref to prevent a queue from
 being freed during a group move"

This reverts commit 4be98915a5ad15b3569c532ad92f2e700601e0c1.

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 block/bfq-cgroup.c | 8 --------
 1 file changed, 8 deletions(-)

diff --git a/block/bfq-cgroup.c b/block/bfq-cgroup.c
index d0e36d652264..64c98baee87e 100644
--- a/block/bfq-cgroup.c
+++ b/block/bfq-cgroup.c
@@ -634,12 +634,6 @@ void bfq_bfqq_move(struct bfq_data *bfqd, struct bfq_queue *bfqq,
 		bfq_bfqq_expire(bfqd, bfqd->in_service_queue,
 				false, BFQQE_PREEMPTED);
 
-	/*
-	 * get extra reference to prevent bfqq from being freed in
-	 * next possible deactivate
-	 */
-	bfqq->ref++;
-
 	if (bfq_bfqq_busy(bfqq))
 		bfq_deactivate_bfqq(bfqd, bfqq, false, false);
 	else if (entity->on_st)
@@ -659,8 +653,6 @@ void bfq_bfqq_move(struct bfq_data *bfqd, struct bfq_queue *bfqq,
 
 	if (!bfqd->in_service_queue && !bfqd->rq_in_driver)
 		bfq_schedule_dispatch(bfqd);
-	/* release extra ref taken above */
-	bfq_put_queue(bfqq);
 }
 
 /**
-- 
2.26.0.rc1.dirty

