From 141c016b6b14b6182b247e6563fbb28f30343ecc Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Wed, 30 Oct 2019 14:02:41 +0800
Subject: [PATCH 48/53] bmq: [Sync] 714e501e16cd sched/core: Fix migration to
 invalid CPU in __set_cpus_allowed_ptr()

---
 kernel/sched/bmq.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/kernel/sched/bmq.c b/kernel/sched/bmq.c
index b4f2300e6c7c..89c1fe35f174 100644
--- a/kernel/sched/bmq.c
+++ b/kernel/sched/bmq.c
@@ -3682,7 +3682,8 @@ static int __set_cpus_allowed_ptr(struct task_struct *p,
 	if (cpumask_equal(p->cpus_ptr, new_mask))
 		goto out;
 
-	if (!cpumask_intersects(new_mask, cpu_valid_mask)) {
+	dest_cpu = cpumask_any_and(cpu_valid_mask, new_mask);
+	if (dest_cpu >= nr_cpu_ids) {
 		ret = -EINVAL;
 		goto out;
 	}
@@ -3703,7 +3704,6 @@ static int __set_cpus_allowed_ptr(struct task_struct *p,
 	if (cpumask_test_cpu(task_cpu(p), new_mask))
 		goto out;
 
-	dest_cpu = cpumask_any_and(cpu_valid_mask, new_mask);
 	if (task_running(p) || p->state == TASK_WAKING) {
 		struct migration_arg arg = { p, dest_cpu };
 
-- 
2.24.0.155.gd9f6f3b619

