From 12d2685355406750a503827605c3c05d994875f5 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Tue, 3 Sep 2019 17:47:24 +0800
Subject: [PATCH 06/53] bmq: [Sync] b0fdc01354f4 sched/core: Schedule new
 worker even if PI-blocked

---
 kernel/sched/bmq.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/kernel/sched/bmq.c b/kernel/sched/bmq.c
index e9fca77b641b..66d200545d76 100644
--- a/kernel/sched/bmq.c
+++ b/kernel/sched/bmq.c
@@ -3144,8 +3144,7 @@ void __noreturn do_task_dead(void)
 
 static inline void sched_submit_work(struct task_struct *tsk)
 {
-	if (!tsk->state || tsk_is_pi_blocked(tsk) ||
-	    signal_pending_state(tsk->state, tsk))
+	if (!tsk->state)
 		return;
 
 	/*
@@ -3161,6 +3160,9 @@ static inline void sched_submit_work(struct task_struct *tsk)
 		preempt_enable_no_resched();
 	}
 
+	if (tsk_is_pi_blocked(tsk))
+		return;
+
 	/*
 	 * If we are going to sleep and we have plugged IO queued,
 	 * make sure to submit it to avoid deadlocks.
-- 
2.24.0.155.gd9f6f3b619

