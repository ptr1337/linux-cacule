From 32c2a92e41e4f8d1dce958b74cc54250de52aada Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Sun, 13 Oct 2019 15:31:00 +0800
Subject: [PATCH 35/53] bmq: Optimize migrate_pending_tasks().

---
 kernel/sched/bmq.c | 17 +++++------------
 1 file changed, 5 insertions(+), 12 deletions(-)

diff --git a/kernel/sched/bmq.c b/kernel/sched/bmq.c
index 05149693d1ce..a61d5263c144 100644
--- a/kernel/sched/bmq.c
+++ b/kernel/sched/bmq.c
@@ -2775,16 +2775,13 @@ static inline void check_curr(struct task_struct *p, struct rq *rq)
 static inline int
 migrate_pending_tasks(struct rq *rq, struct rq *dest_rq, const int dest_cpu)
 {
-	struct task_struct *p, *next;
+	struct task_struct *p, *skip = rq->curr;
 	int nr_migrated = 0;
-	int nr_tries = min((rq->nr_running + 1) / 2, SCHED_RQ_NR_MIGRATION);
+	int nr_tries = min(rq->nr_running / 2, SCHED_RQ_NR_MIGRATION);
 
-	for (p = rq_first_bmq_task(rq);
-	     nr_tries && p != rq->idle;
-	     p = rq_next_bmq_task(p, rq)) {
-		if (task_running(p))
-			continue;
-		next = rq_next_bmq_task(p, rq);
+	while (skip != rq->idle && nr_tries &&
+	       (p = rq_next_bmq_task(skip, rq)) != rq->idle) {
+		skip = rq_next_bmq_task(p, rq);
 		if (cpumask_test_cpu(dest_cpu, p->cpus_ptr)) {
 			dequeue_task(p, rq, 0);
 			set_task_cpu(p, dest_cpu);
@@ -2792,10 +2789,6 @@ migrate_pending_tasks(struct rq *rq, struct rq *dest_rq, const int dest_cpu)
 			nr_migrated++;
 		}
 		nr_tries--;
-		/* make a jump */
-		if (next == rq->idle)
-			break;
-		p = next;
 	}
 
 	return nr_migrated;
-- 
2.24.0.155.gd9f6f3b619

