From 383430f72f7036c778a92cc797fca650cc999d42 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Wed, 30 Oct 2019 13:52:19 +0800
Subject: [PATCH 46/53] bmq: [Sync] 5311a98fef7d tasks, sched/core: RCUify the
 assignment of rq->curr

---
 kernel/sched/bmq.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/kernel/sched/bmq.c b/kernel/sched/bmq.c
index eecd5ddec6db..57a6cb2667bd 100644
--- a/kernel/sched/bmq.c
+++ b/kernel/sched/bmq.c
@@ -3086,7 +3086,11 @@ static void __sched notrace __schedule(bool preempt)
 		if (MAX_PRIO == next->prio)
 			schedstat_inc(rq->sched_goidle);
 
-		rq->curr = next;
+		/*
+		 * RCU users of rcu_dereference(rq->curr) may not see
+		 * changes to task_struct made by pick_next_task().
+		 */
+		RCU_INIT_POINTER(rq->curr, next);
 		/*
 		 * The membarrier system call requires each architecture
 		 * to have a full memory barrier after updating
@@ -4988,7 +4992,8 @@ void init_idle(struct task_struct *idle, int cpu)
 	__set_task_cpu(idle, cpu);
 	rcu_read_unlock();
 
-	rq->curr = rq->idle = idle;
+	rq->idle = idle;
+	rcu_assign_pointer(rq->curr, idle);
 	idle->on_cpu = 1;
 
 	raw_spin_unlock(&rq->lock);
-- 
2.24.0.155.gd9f6f3b619

