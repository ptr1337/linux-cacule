From 705f8f1492a6cf4d8a641b43b7475aad283995f2 Mon Sep 17 00:00:00 2001
From: Lin Feng <linf () wangsu ! com>
Date: Wed, 3 Feb 2021 03:31:13 +0000
Subject: [PATCH 27/27] Fix Revert "bfq: Fix computation of shallow depth" in
 linux-block.git

Hi Jens,

Not yet got your mail, but per https://lkml.org/lkml/2021/2/2/1901, this patch
 is the incremental. Codes based on:
https://git.kernel.org/pub/scm/linux/kernel/git/axboe/linux-block.git/patch/?id=8a483b42b1b3cef7e72564cdcdde62a373bd2f01

Notes: After checking previous hand-applied patch in block-5.11 broken 2 lines
in original patch, the incremental covers all.

Thanks.

Signed-off-by: Lin Feng <linf@wangsu.com>
---
 block/bfq-iosched.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/block/bfq-iosched.c b/block/bfq-iosched.c
index 7374fd8c2..e592c0c65 100644
--- a/block/bfq-iosched.c
+++ b/block/bfq-iosched.c
@@ -6764,13 +6764,13 @@ static unsigned int bfq_update_depths(struct bfq_data *bfqd,
 	 * limit 'something'.
 	 */
 	/* no more than 50% of tags for async I/O */
-	bfqd->word_depths[0][1] = max(((1U << bt->sb.shift) * 3) >> 2, 1U);
+	bfqd->word_depths[0][0] = max((1U << bt->sb.shift) >> 1, 1U);
 	/*
 	 * no more than 75% of tags for sync writes (25% extra tags
 	 * w.r.t. async I/O, to prevent async I/O from starving sync
 	 * writes)
 	 */
-	bfqd->word_depths[0][1] = max((bt->sb.depth * 3) >> 2, 1U);
+	bfqd->word_depths[0][1] = max(((1U << bt->sb.shift) * 3) >> 2, 1U);
 
 	/*
 	 * In-word depths in case some bfq_queue is being weight-
-- 
2.30.0.335.ge6362826a0

