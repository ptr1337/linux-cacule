From cd71933c7a489f49d0be6736abf45bd4c2f6267d Mon Sep 17 00:00:00 2001
From: Oleksandr Natalenko <oleksandr@natalenko.name>
Date: Sat, 26 Dec 2020 16:37:46 +0100
Subject: [PATCH 4/4] mm-5.10: respect soft active file pages eviction

Signed-off-by: Oleksandr Natalenko <oleksandr@natalenko.name>
---
 mm/vmscan.c | 21 +++++++++------------
 1 file changed, 9 insertions(+), 12 deletions(-)

diff --git a/mm/vmscan.c b/mm/vmscan.c
index c017f4496..93760769d 100644
--- a/mm/vmscan.c
+++ b/mm/vmscan.c
@@ -2429,18 +2429,15 @@ static void get_scan_count(struct lruvec *lruvec, struct scan_control *sc,
 
 #if defined(CONFIG_UNEVICTABLE_ACTIVEFILE)
 		if (lru == LRU_ACTIVE_FILE) {
-			unsigned long kib_active_file_now = K(global_node_page_state(NR_ACTIVE_FILE));
-			if (kib_active_file_now < sysctl_unevictable_activefile_kbytes_low &&
-				kib_active_file_now > sysctl_unevictable_activefile_kbytes_min) {
-				nr[lru] = scan *
-					(kib_active_file_now -
-					 sysctl_unevictable_activefile_kbytes_min) /
-					(sysctl_unevictable_activefile_kbytes_low -
-					 sysctl_unevictable_activefile_kbytes_min);
-			} else if (kib_active_file_now <= sysctl_unevictable_activefile_kbytes_min) {
-				nr[lru] = 0;
-				continue;
-			}
+			unsigned long activefile_kbytes_now = K(global_node_page_state(NR_ACTIVE_FILE));
+			unsigned long low_scan_granularity = SWAP_CLUSTER_MAX >> sc->priority;
+
+			if (activefile_kbytes_now < sysctl_unevictable_activefile_kbytes_low &&
+				activefile_kbytes_now > sysctl_unevictable_activefile_kbytes_min &&
+				scan > low_scan_granularity)
+				scan = low_scan_granularity;
+			else if (activefile_kbytes_now <= sysctl_unevictable_activefile_kbytes_min)
+				scan = 0;
 		}
 #endif
 		nr[lru] = scan;
-- 
2.30.0.rc0

