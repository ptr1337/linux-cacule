From 6529eceef928baade8a85a3c199750580c67ba53 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Thu, 10 Sep 2020 22:46:11 +0800
Subject: [PATCH 44/79] sched/alt: Call check_preempt_curr() in
 ttwu_do_wakeup().

Sync-up this like what it does in mainline scheduler code.
---
 kernel/sched/alt_core.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/kernel/sched/alt_core.c b/kernel/sched/alt_core.c
index 76f72292e28a..1dd4972beda4 100644
--- a/kernel/sched/alt_core.c
+++ b/kernel/sched/alt_core.c
@@ -1593,6 +1593,7 @@ ttwu_stat(struct task_struct *p, int cpu, int wake_flags)
 static inline void
 ttwu_do_wakeup(struct rq *rq, struct task_struct *p, int wake_flags)
 {
+	check_preempt_curr(rq);
 	p->state = TASK_RUNNING;
 	trace_sched_wakeup(p);
 }
@@ -1615,6 +1616,8 @@ static int ttwu_remote(struct task_struct *p, int wake_flags)
 
 	rq = __task_access_lock(p, &lock);
 	if (task_on_rq_queued(p)) {
+		/* check_preempt_curr() may use rq clock */
+		update_rq_clock(rq);
 		ttwu_do_wakeup(rq, p, wake_flags);
 		ret = 1;
 	}
@@ -1654,8 +1657,6 @@ void sched_ttwu_pending(void *arg)
 		ttwu_do_activate(rq, p, p->sched_remote_wakeup ? WF_MIGRATED : 0);
 	}
 
-	check_preempt_curr(rq);
-
 	rq_unlock_irqrestore(rq, &rf);
 }
 
@@ -1762,7 +1763,6 @@ static inline void ttwu_queue(struct task_struct *p, int cpu, int wake_flags)
 	raw_spin_lock(&rq->lock);
 	update_rq_clock(rq);
 	ttwu_do_activate(rq, p, wake_flags);
-	check_preempt_curr(rq);
 	raw_spin_unlock(&rq->lock);
 }
 
-- 
2.29.2.456.g3a0b884cab

