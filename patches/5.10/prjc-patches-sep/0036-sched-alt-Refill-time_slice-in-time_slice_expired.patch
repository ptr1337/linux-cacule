From 0d9ef7cfa7325fb14297078768f813750a482954 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Wed, 2 Sep 2020 08:24:30 +0800
Subject: [PATCH 36/79] sched/alt: Refill time_slice in time_slice_expired().

---
 kernel/sched/alt_core.c | 5 +----
 kernel/sched/bmq_imp.h  | 2 ++
 kernel/sched/pds_imp.h  | 1 +
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/kernel/sched/alt_core.c b/kernel/sched/alt_core.c
index 407bc46de451..5187d23f27df 100644
--- a/kernel/sched/alt_core.c
+++ b/kernel/sched/alt_core.c
@@ -2197,7 +2197,6 @@ int sched_fork(unsigned long clone_flags, struct task_struct *p)
 #endif
 
 	if (p->time_slice < RESCHED_NS) {
-		p->time_slice = sched_timeslice_ns;
 		time_slice_expired(p, rq);
 		resched_curr(rq);
 	}
@@ -3409,10 +3408,8 @@ static inline void check_curr(struct task_struct *p, struct rq *rq)
 
 	update_curr(rq, p);
 
-	if (p->time_slice < RESCHED_NS) {
-		p->time_slice = sched_timeslice_ns;
+	if (p->time_slice < RESCHED_NS)
 		time_slice_expired(p, rq);
-	}
 }
 
 static inline struct task_struct *
diff --git a/kernel/sched/bmq_imp.h b/kernel/sched/bmq_imp.h
index d7df1d3f9495..c9f0c708dd61 100644
--- a/kernel/sched/bmq_imp.h
+++ b/kernel/sched/bmq_imp.h
@@ -45,6 +45,8 @@ static inline void requeue_task(struct task_struct *p, struct rq *rq);
 
 static inline void time_slice_expired(struct task_struct *p, struct rq *rq)
 {
+	p->time_slice = sched_timeslice_ns;
+
 	if (SCHED_FIFO != p->policy && task_on_rq_queued(p)) {
 		if (SCHED_RR != p->policy)
 			deboost_task(p);
diff --git a/kernel/sched/pds_imp.h b/kernel/sched/pds_imp.h
index b970879f1d2e..aa7e933f08b8 100644
--- a/kernel/sched/pds_imp.h
+++ b/kernel/sched/pds_imp.h
@@ -38,6 +38,7 @@ static inline void requeue_task(struct task_struct *p, struct rq *rq);
 static inline void time_slice_expired(struct task_struct *p, struct rq *rq)
 {
 	/*printk(KERN_INFO "sched: time_slice_expired(%d) - %px\n", cpu_of(rq), p);*/
+	p->time_slice = sched_timeslice_ns;
 
 	if (p->prio >= MAX_RT_PRIO)
 		p->deadline = rq->clock + user_prio2deadline[TASK_USER_PRIO(p)];
-- 
2.29.2.456.g3a0b884cab

