From 3d1dde8071fb5e32a33afb405e0b637f897a5832 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Fri, 4 Dec 2020 10:55:21 +0800
Subject: [PATCH 73/79] sched/alt: Minor improvement for
 sched_cpu_affinity_masks.

---
 kernel/sched/alt_core.c | 29 +++++++++++++----------------
 1 file changed, 13 insertions(+), 16 deletions(-)

diff --git a/kernel/sched/alt_core.c b/kernel/sched/alt_core.c
index e485c76b1668..58a432fffd53 100644
--- a/kernel/sched/alt_core.c
+++ b/kernel/sched/alt_core.c
@@ -800,7 +800,7 @@ int get_nohz_timer_target(void)
 		default_cpu = cpu;
 	}
 
-	for (mask = &(per_cpu(sched_cpu_affinity_masks, cpu)[0]);
+	for (mask = per_cpu(sched_cpu_affinity_masks, cpu) + 1;
 	     mask < per_cpu(sched_cpu_affinity_end_mask, cpu); mask++)
 		for_each_cpu_and(i, mask, housekeeping_cpumask(HK_FLAG_TIMER))
 			if (!idle_cpu(i))
@@ -3524,7 +3524,7 @@ static inline int take_other_rq_tasks(struct rq *rq, int cpu)
 	if (cpumask_empty(&sched_rq_pending_mask))
 		return 0;
 
-	affinity_mask = &(per_cpu(sched_cpu_affinity_masks, cpu)[0]);
+	affinity_mask = per_cpu(sched_cpu_affinity_masks, cpu) + 1;
 	end_mask = per_cpu(sched_cpu_affinity_end_mask, cpu);
 	do {
 		int i;
@@ -5863,19 +5863,18 @@ int sched_cpu_dying(unsigned int cpu)
 #ifdef CONFIG_SMP
 static void sched_init_topology_cpumask_early(void)
 {
-	int cpu, level;
+	int cpu;
 	cpumask_t *tmp;
 
 	for_each_possible_cpu(cpu) {
-		for (level = 0; level < NR_CPU_AFFINITY_LEVELS; level++) {
-			tmp = &(per_cpu(sched_cpu_affinity_masks, cpu)[level]);
-			cpumask_copy(tmp, cpu_possible_mask);
-			cpumask_clear_cpu(cpu, tmp);
-		}
-		per_cpu(sched_cpu_llc_mask, cpu) =
-			&(per_cpu(sched_cpu_affinity_masks, cpu)[0]);
-		per_cpu(sched_cpu_affinity_end_mask, cpu) =
-			&(per_cpu(sched_cpu_affinity_masks, cpu)[1]);
+		tmp = per_cpu(sched_cpu_affinity_masks, cpu);
+
+		cpumask_copy(tmp, cpumask_of(cpu));
+		tmp++;
+		cpumask_copy(tmp, cpu_possible_mask);
+		cpumask_clear_cpu(cpu, tmp);
+		per_cpu(sched_cpu_llc_mask, cpu) = tmp;
+		per_cpu(sched_cpu_affinity_end_mask, cpu) = ++tmp;
 		/*per_cpu(sd_llc_id, cpu) = cpu;*/
 	}
 }
@@ -5896,9 +5895,7 @@ static void sched_init_topology_cpumask(void)
 		/* take chance to reset time slice for idle tasks */
 		cpu_rq(cpu)->idle->time_slice = sched_timeslice_ns;
 
-		chk = &(per_cpu(sched_cpu_affinity_masks, cpu)[0]);
-
-		cpumask_copy(chk++, cpumask_of(cpu));
+		chk = per_cpu(sched_cpu_affinity_masks, cpu) + 1;
 
 		cpumask_complement(chk, cpumask_of(cpu));
 #ifdef CONFIG_SCHED_SMT
@@ -5916,7 +5913,7 @@ static void sched_init_topology_cpumask(void)
 		printk(KERN_INFO "sched: cpu#%02d llc_id = %d, llc_mask idx = %d\n",
 		       cpu, per_cpu(sd_llc_id, cpu),
 		       (int) (per_cpu(sched_cpu_llc_mask, cpu) -
-			      &(per_cpu(sched_cpu_affinity_masks, cpu)[0])));
+			      per_cpu(sched_cpu_affinity_masks, cpu)));
 	}
 }
 #endif
-- 
2.29.2.456.g3a0b884cab

