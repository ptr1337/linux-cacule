From eaadd4645b08adac196a7081a18b7ef93395b4f1 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Sun, 2 Aug 2020 09:52:48 +0800
Subject: [PATCH 15/79] sched/alt: [Sync] b2a02fc43a1f smp: Optimize
 send_call_function_single_ipi()

---
 kernel/sched/alt_core.c  | 11 ++++++++++-
 kernel/sched/alt_sched.h |  5 ++++-
 2 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/kernel/sched/alt_core.c b/kernel/sched/alt_core.c
index 2bea255aab4f..1e8535650a18 100644
--- a/kernel/sched/alt_core.c
+++ b/kernel/sched/alt_core.c
@@ -793,7 +793,6 @@ static void nohz_csd_func(void *info)
 
 	/*
 	 * Release the rq::nohz_csd.
-	 */
 	flags = atomic_fetch_andnot(NOHZ_KICK_MASK, nohz_flags(cpu));
 	WARN_ON(!(flags & NOHZ_KICK_MASK));
 
@@ -1680,6 +1679,16 @@ static void wake_csd_func(void *info)
 	sched_ttwu_pending();
 }
 
+void send_call_function_single_ipi(int cpu)
+{
+	struct rq *rq = cpu_rq(cpu);
+
+	if (!set_nr_if_polling(rq->idle))
+		arch_send_call_function_single_ipi(cpu);
+	else
+		trace_sched_wake_idle_without_ipi(cpu);
+}
+
 /*
  * Queue a task on the target CPUs wake_list and wake the CPU via IPI if
  * necessary. The wakee CPU on receipt of the IPI will queue the task
diff --git a/kernel/sched/alt_sched.h b/kernel/sched/alt_sched.h
index a6e618494b52..d996bc91e1b2 100644
--- a/kernel/sched/alt_sched.h
+++ b/kernel/sched/alt_sched.h
@@ -231,9 +231,12 @@ static inline int best_mask_cpu(int cpu, const cpumask_t *cpumask)
 }
 
 extern void sched_ttwu_pending(void);
+extern void flush_smp_call_function_from_idle(void);
+
 #else  /* !CONFIG_SMP */
+static inline void flush_smp_call_function_from_idle(void) { }
 static inline void sched_ttwu_pending(void) { }
-#endif /* CONFIG_SMP */
+#endif
 
 #ifndef arch_scale_freq_tick
 static __always_inline
-- 
2.29.2.456.g3a0b884cab

