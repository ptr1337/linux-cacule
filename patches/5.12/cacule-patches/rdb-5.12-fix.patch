commit e906f0f583341219f02b15ae2c9c68377ba1cfb5
Author: Hamad Marri <hamad.s.almarri@gmail.com>
Date:   Sun May 16 21:30:32 2021 +0300

    RDB: fix no need for trigger_nohz since it calls loadbalancer

diff --git a/kernel/sched/core.c b/kernel/sched/core.c
index b9538de370e5..8020292ffbef 100644
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -4552,13 +4552,10 @@ void scheduler_tick(void)

 #if defined(CONFIG_CACULE_RDB) && !defined(CONFIG_NO_HZ_FULL)
 	rq->ticks++;
-	if (rq->nr_running == 1 && rq->ticks < skip) {
-		rq->idle_balance = idle_cpu(cpu);
-		trigger_nohz_balancer_kick(rq);
-
+	if (rq->nr_running == 1 && rq->ticks < skip)
 		/* skip */
 		return;
-	}
+
 	rq->ticks = 0;
 #endif

diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
index ca86136f6023..749396e7bb22 100644
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -10746,6 +10746,7 @@ static inline int find_new_ilb(void)
 	return nr_cpu_ids;
 }

+#if !defined(CONFIG_CACULE_RDB)
 /*
  * Kick a CPU to do the nohz balancing, if it is time for it. We pick any
  * idle CPU in the HK_FLAG_MISC housekeeping set (if there is one).
@@ -10896,6 +10897,7 @@ static void nohz_balancer_kick(struct rq *rq)
 	if (flags)
 		kick_ilb(flags);
 }
+#endif /* CONFIG_CACULE_RDB */

 static void set_cpu_sd_state_busy(int cpu)
 {
@@ -11564,13 +11566,6 @@ void trigger_load_balance(struct rq *rq)
 }
 #endif

-#if defined(CONFIG_CACULE_RDB) && !defined(CONFIG_NO_HZ_FULL)
-void trigger_nohz_balancer_kick(struct rq *rq)
-{
-	nohz_balancer_kick(rq);
-}
-#endif
-
 #ifdef CONFIG_CACULE_RDB
 static int
 idle_try_pull_any(struct cfs_rq *cfs_rq)
@@ -11708,8 +11703,6 @@ void trigger_load_balance(struct rq *rq)
 		idle_try_pull_any(&rq->cfs);
 	else
 		active_balance(rq);
-
-	nohz_balancer_kick(rq);
 }
 #endif

diff --git a/kernel/sched/sched.h b/kernel/sched/sched.h
index cf5e871417d1..06ba449a59b6 100644
--- a/kernel/sched/sched.h
+++ b/kernel/sched/sched.h
@@ -1976,10 +1976,6 @@ extern void update_group_capacity(struct sched_domain *sd, int cpu);

 extern void trigger_load_balance(struct rq *rq);

-#if defined(CONFIG_CACULE_RDB) && !defined(CONFIG_NO_HZ_FULL)
-extern void trigger_nohz_balancer_kick(struct rq *rq);
-#endif
-
 extern void set_cpus_allowed_common(struct task_struct *p, const struct cpumask *new_mask, u32 flags);

 static inline struct task_struct *get_push_task(struct rq *rq)
