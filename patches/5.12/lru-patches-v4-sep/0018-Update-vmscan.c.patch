From 335f063151500d3e0487683fe01acc773cd635e9 Mon Sep 17 00:00:00 2001
From: Yu Zhao <yuzhao@google.com>
Date: Mon, 3 May 2021 20:18:10 -0600
Subject: [PATCH 18/19] Update vmscan.c

---
 mm/vmscan.c | 21 +++++++++++++++++----
 1 file changed, 17 insertions(+), 4 deletions(-)

diff --git a/mm/vmscan.c b/mm/vmscan.c
index f625b6264..7e10e8bb6 100644
--- a/mm/vmscan.c
+++ b/mm/vmscan.c
@@ -51,6 +51,7 @@
 #include <linux/psi.h>
 #include <linux/memory.h>
 #include <linux/pagewalk.h>
+#include <linux/shmem_fs.h>
 #include <linux/ctype.h>
 #include <linux/debugfs.h>
 
@@ -4936,6 +4937,7 @@ static int page_update_gen(struct page *page, int new_gen)
 
 static int should_skip_vma(unsigned long start, unsigned long end, struct mm_walk *walk)
 {
+	struct address_space *mapping;
 	struct vm_area_struct *vma = walk->vma;
 	struct mm_walk_args *args = walk->private;
 
@@ -4946,13 +4948,18 @@ static int should_skip_vma(unsigned long start, unsigned long end, struct mm_wal
 	if (vma_is_anonymous(vma))
 		return !args->should_walk[0];
 
-	if (vma_is_shmem(vma))
+	if (WARN_ON_ONCE(!vma->vm_file || !vma->vm_file->f_mapping))
+		return true;
+
+	mapping = vma->vm_file->f_mapping;
+	if (!mapping->a_ops->writepage)
+		return true;
+
+	if (shmem_mapping(mapping))
 		return !args->should_walk[0] ||
 		       mapping_unevictable(vma->vm_file->f_mapping);
 
-	return !args->should_walk[1] || vma_is_dax(vma) ||
-	       vma == get_gate_vma(vma->vm_mm) ||
-	       mapping_unevictable(vma->vm_file->f_mapping);
+	return !args->should_walk[1] || mapping_unevictable(mapping);
 }
 
 /*
@@ -5033,6 +5040,9 @@ static bool walk_pte_range(pmd_t *pmd, unsigned long start, unsigned long end,
 			continue;
 		}
 
+		if (WARN_ON_ONCE(pte_devmap(pte[i]) || pte_special(pte[i])))
+			continue;
+
 		if (!pte_young(pte[i])) {
 			args->mm_stats[MM_LEAF_OLD]++;
 			continue;
@@ -5172,6 +5182,9 @@ static void walk_pmd_range_locked(pud_t *pud, unsigned long start, unsigned long
 			continue;
 		}
 
+		if (WARN_ON_ONCE(pmd_devmap(pmd[i])))
+			continue;
+
 		if (!pmd_young(pmd[i])) {
 			args->mm_stats[MM_LEAF_OLD]++;
 			continue;
-- 
2.31.1.527.g2d677e5b15

