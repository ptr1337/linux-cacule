From 2741e48dcb273bbcc37f2be0a7ae06eaa9b66383 Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Mon, 24 May 2021 23:39:59 +0200
Subject: [PATCH 30/35] Revert "block: Do not merge recursively in
 elv_attempt_insert_merge()"

This reverts commit 6b8d0175aeda91bfa93f18fff5b95d15801dbdad.

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 block/elevator.c | 19 ++++++++++++++-----
 1 file changed, 14 insertions(+), 5 deletions(-)

diff --git a/block/elevator.c b/block/elevator.c
index 972cc9ef2..0c1e9a1b4 100644
--- a/block/elevator.c
+++ b/block/elevator.c
@@ -350,11 +350,12 @@ enum elv_merge elv_merge(struct request_queue *q, struct request **req,
  * we can append 'rq' to an existing request, so we can throw 'rq' away
  * afterwards.
  *
- * Returns true if we merged, false otherwise.
+ * Returns true if we merged, false otherwise
  */
 bool elv_attempt_insert_merge(struct request_queue *q, struct request *rq)
 {
 	struct request *__rq;
+	bool ret;
 
 	if (blk_queue_nomerges(q))
 		return false;
@@ -368,13 +369,21 @@ bool elv_attempt_insert_merge(struct request_queue *q, struct request *rq)
 	if (blk_queue_noxmerges(q))
 		return false;
 
+	ret = false;
 	/*
 	 * See if our hash lookup can find a potential backmerge.
 	 */
-	__rq = elv_rqhash_find(q, blk_rq_pos(rq));
-	if (!__rq || !blk_attempt_req_merge(q, __rq, rq))
-		return false;
-	return true;
+	while (1) {
+		__rq = elv_rqhash_find(q, blk_rq_pos(rq));
+		if (!__rq || !blk_attempt_req_merge(q, __rq, rq))
+			break;
+
+		/* The merged request could be merged with others, try again */
+		ret = true;
+		rq = __rq;
+	}
+
+	return ret;
 }
 
 void elv_merged_request(struct request_queue *q, struct request *rq,
-- 
2.32.0.rc1

