From 3cf1ade01feb9b7d91b2e02caf860dba8dcf6ad0 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Tue, 26 Jan 2021 14:04:46 +0800
Subject: [PATCH 088/130] sched/alt: [Sync] 9f68b5b74c48 sched: Detect call to
 schedule from critical entry code

---
 kernel/sched/alt_core.c  | 1 +
 kernel/sched/alt_sched.h | 6 ++++++
 2 files changed, 7 insertions(+)

diff --git a/kernel/sched/alt_core.c b/kernel/sched/alt_core.c
index 148c2fc477af..86c1ca67b675 100644
--- a/kernel/sched/alt_core.c
+++ b/kernel/sched/alt_core.c
@@ -3464,6 +3464,7 @@ static inline void schedule_debug(struct task_struct *prev, bool preempt)
 		preempt_count_set(PREEMPT_DISABLED);
 	}
 	rcu_sleep_check();
+	SCHED_WARN_ON(ct_state() == CONTEXT_USER);
 
 	profile_hit(SCHED_PROFILING, __builtin_return_address(0));
 
diff --git a/kernel/sched/alt_sched.h b/kernel/sched/alt_sched.h
index d979b4b1aac2..a157800317e9 100644
--- a/kernel/sched/alt_sched.h
+++ b/kernel/sched/alt_sched.h
@@ -55,6 +55,12 @@
 #include "pds.h"
 #endif
 
+#ifdef CONFIG_SCHED_DEBUG
+# define SCHED_WARN_ON(x)	WARN_ONCE(x, #x)
+#else
+# define SCHED_WARN_ON(x)	({ (void)(x), 0; })
+#endif
+
 /* task_struct::on_rq states: */
 #define TASK_ON_RQ_QUEUED	1
 #define TASK_ON_RQ_MIGRATING	2
-- 
2.31.1.305.gd1b10fc6d8

