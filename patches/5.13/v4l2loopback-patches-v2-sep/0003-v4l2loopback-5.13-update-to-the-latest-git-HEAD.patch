From 809150348f78771aeabcb1e4919d9478a33a0e02 Mon Sep 17 00:00:00 2001
From: Oleksandr Natalenko <oleksandr@natalenko.name>
Date: Wed, 4 Aug 2021 10:37:12 +0200
Subject: [PATCH 3/3] v4l2loopback-5.13: update to the latest git HEAD

Signed-off-by: Oleksandr Natalenko <oleksandr@natalenko.name>
---
 drivers/media/v4l2-core/v4l2loopback.c        | 59 ++++++++++---------
 .../media/v4l2-core/v4l2loopback_formats.h    |  2 +
 2 files changed, 33 insertions(+), 28 deletions(-)

diff --git a/drivers/media/v4l2-core/v4l2loopback.c b/drivers/media/v4l2-core/v4l2loopback.c
index 74af58d..73defda 100644
--- a/drivers/media/v4l2-core/v4l2loopback.c
+++ b/drivers/media/v4l2-core/v4l2loopback.c
@@ -458,9 +458,7 @@ struct v4l2l_format {
 #define FORMAT_FLAGS_PLANAR 0x01
 #define FORMAT_FLAGS_COMPRESSED 0x02
 
-static const struct v4l2l_format formats[] = {
 #include "v4l2loopback_formats.h"
-};
 
 static const unsigned int FORMATS = ARRAY_SIZE(formats);
 
@@ -556,6 +554,9 @@ static ssize_t attr_store_format(struct device *cd,
 	struct v4l2_loopback_device *dev = v4l2loopback_cd2dev(cd);
 	int fps_num = 0, fps_den = 1;
 
+	if (!dev)
+		return -ENODEV;
+
 	/* only fps changing is supported */
 	if (sscanf(buf, "@%d/%d", &fps_num, &fps_den) > 0) {
 		struct v4l2_fract f = { .numerator = fps_den,
@@ -576,6 +577,9 @@ static ssize_t attr_show_buffers(struct device *cd,
 {
 	struct v4l2_loopback_device *dev = v4l2loopback_cd2dev(cd);
 
+	if (!dev)
+		return -ENODEV;
+
 	return sprintf(buf, "%d\n", dev->used_buffers);
 }
 
@@ -745,8 +749,8 @@ static int vidioc_querycap(struct file *file, void *priv,
 {
 	struct v4l2_loopback_device *dev = v4l2loopback_getdevice(file);
 	int labellen = (sizeof(cap->card) < sizeof(dev->card_label)) ?
-			       sizeof(cap->card) :
-			       sizeof(dev->card_label);
+				     sizeof(cap->card) :
+				     sizeof(dev->card_label);
 	int device_nr =
 		((struct v4l2loopback_private *)video_get_drvdata(dev->vdev))
 			->device_nr;
@@ -885,7 +889,7 @@ static int vidioc_enum_fmt_cap(struct file *file, void *fh,
 	return 0;
 }
 
-/* returns current video format format fmt
+/* returns current video format
  * called on VIDIOC_G_FMT, with v4l2_buf_type set to V4L2_BUF_TYPE_VIDEO_CAPTURE
  */
 static int vidioc_g_fmt_cap(struct file *file, void *priv,
@@ -1059,7 +1063,10 @@ static int vidioc_try_fmt_out(struct file *file, void *priv,
 		pix_format_set_size(&fmt->fmt.pix, format, w, h);
 
 		fmt->fmt.pix.pixelformat = format->fourcc;
-		fmt->fmt.pix.colorspace = V4L2_COLORSPACE_SRGB;
+
+		if ((fmt->fmt.pix.colorspace == V4L2_COLORSPACE_DEFAULT) ||
+		    (fmt->fmt.pix.colorspace > V4L2_COLORSPACE_DCI_P3))
+			fmt->fmt.pix.colorspace = V4L2_COLORSPACE_SRGB;
 
 		if (V4L2_FIELD_ANY == fmt->fmt.pix.field)
 			fmt->fmt.pix.field = V4L2_FIELD_NONE;
@@ -1291,7 +1298,8 @@ static int v4l2loopback_set_ctrl(struct v4l2_loopback_device *dev, u32 id,
 		if (val < 0 || val > 1)
 			return -EINVAL;
 		dev->keep_format = val;
-		try_free_buffers(dev); /* will only free buffers if !keep_format */
+		try_free_buffers(
+			dev); /* will only free buffers if !keep_format */
 		break;
 	case CID_SUSTAIN_FRAMERATE:
 		if (val < 0 || val > 1)
@@ -2344,9 +2352,9 @@ static void timeout_timer_clb(unsigned long nr)
 /* init loopback main structure */
 #define DEFAULT_FROM_CONF(confmember, default_condition, default_value)        \
 	((conf) ?                                                              \
-		 ((conf->confmember default_condition) ? (default_value) :     \
-							 (conf->confmember)) : \
-		 default_value)
+		       ((conf->confmember default_condition) ? (default_value) :     \
+							       (conf->confmember)) : \
+		       default_value)
 
 static int v4l2_loopback_add(struct v4l2_loopback_config *conf, int *ret_nr)
 {
@@ -2360,8 +2368,8 @@ static int v4l2_loopback_add(struct v4l2_loopback_config *conf, int *ret_nr)
 	int _max_height = DEFAULT_FROM_CONF(
 		max_height, <= V4L2LOOPBACK_SIZE_MIN_HEIGHT, max_height);
 	bool _announce_all_caps = (conf && conf->announce_all_caps >= 0) ?
-					  (conf->announce_all_caps) :
-					  V4L2LOOPBACK_DEFAULT_EXCLUSIVECAPS;
+						(conf->announce_all_caps) :
+						V4L2LOOPBACK_DEFAULT_EXCLUSIVECAPS;
 
 	int _max_buffers = DEFAULT_FROM_CONF(max_buffers, <= 0, max_buffers);
 	int _max_openers = DEFAULT_FROM_CONF(max_openers, <= 0, max_openers);
@@ -2446,7 +2454,9 @@ static int v4l2_loopback_add(struct v4l2_loopback_config *conf, int *ret_nr)
 	init_vdev(dev->vdev, nr);
 	dev->vdev->v4l2_dev = &dev->v4l2_dev;
 	init_capture_param(&dev->capture_param);
-	set_timeperframe(dev, &dev->capture_param.timeperframe);
+	err = set_timeperframe(dev, &dev->capture_param.timeperframe);
+	if (err)
+		goto out_unregister;
 	dev->keep_format = 0;
 	dev->sustain_framerate = 0;
 
@@ -2503,6 +2513,8 @@ static int v4l2_loopback_add(struct v4l2_loopback_config *conf, int *ret_nr)
 	dev->v4l2_dev.ctrl_handler = hdl;
 
 	err = v4l2_ctrl_handler_setup(hdl);
+	if (err)
+		goto out_free_handler;
 
 	/* FIXME set buffers to 0 */
 
@@ -2517,7 +2529,9 @@ static int v4l2_loopback_add(struct v4l2_loopback_config *conf, int *ret_nr)
 	dev->buffer_size = PAGE_ALIGN(dev->pix_format.sizeimage);
 	dprintk("buffer_size = %ld (=%d)\n", dev->buffer_size,
 		dev->pix_format.sizeimage);
-	allocate_buffers(dev);
+	err = allocate_buffers(dev);
+	if (err && dev->buffer_size)
+		goto out_free_handler;
 
 	init_waitqueue_head(&dev->read_event);
 
@@ -2665,10 +2679,10 @@ static long v4l2loopback_control_ioctl(struct file *file, unsigned int cmd,
 
 static const struct file_operations v4l2loopback_ctl_fops = {
 	// clang-format off
+	.owner		= THIS_MODULE,
 	.open		= nonseekable_open,
 	.unlocked_ioctl	= v4l2loopback_control_ioctl,
 	.compat_ioctl	= v4l2loopback_control_ioctl,
-	.owner		= THIS_MODULE,
 	.llseek		= noop_llseek,
 	// clang-format on
 };
@@ -2876,20 +2890,9 @@ static void v4l2loopback_cleanup_module(void)
 #endif
 
 MODULE_ALIAS_MISCDEV(MISC_DYNAMIC_MINOR);
-MODULE_ALIAS("devname:v4l2loopback");
 
-#ifdef MODULE
-int __init init_module(void)
-{
-	return v4l2loopback_init_module();
-}
-void __exit cleanup_module(void)
-{
-	return v4l2loopback_cleanup_module();
-}
-#else
-late_initcall(v4l2loopback_init_module);
-#endif
+module_init(v4l2loopback_init_module);
+module_exit(v4l2loopback_cleanup_module);
 
 /*
  * fake usage of unused functions
diff --git a/drivers/media/v4l2-core/v4l2loopback_formats.h b/drivers/media/v4l2-core/v4l2loopback_formats.h
index 6cb6f84..7086175 100644
--- a/drivers/media/v4l2-core/v4l2loopback_formats.h
+++ b/drivers/media/v4l2-core/v4l2loopback_formats.h
@@ -1,3 +1,4 @@
+static const struct v4l2l_format formats[] = {
 #ifndef V4L2_PIX_FMT_VP9
 #define V4L2_PIX_FMT_VP9 v4l2_fourcc('V', 'P', '9', '0')
 #endif
@@ -425,3 +426,4 @@
 		.flags = FORMAT_FLAGS_COMPRESSED,
 	},
 #endif /* V4L2_PIX_FMT_HEVC */
+};
-- 
2.32.0.452.g940fe202ad

