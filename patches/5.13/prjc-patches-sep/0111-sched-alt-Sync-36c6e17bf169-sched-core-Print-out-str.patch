From fdeebbda3ffebca06f77e452a9e33f9df1489584 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Thu, 18 Feb 2021 15:58:32 +0800
Subject: [PATCH 111/148] sched/alt: [Sync] 36c6e17bf169 sched/core: Print out
 straggler tasks in sched_cpu_dying()

---
 kernel/sched/alt_core.c  | 26 ++++++++++++++++++++++++--
 kernel/sched/alt_sched.h |  2 +-
 2 files changed, 25 insertions(+), 3 deletions(-)

diff --git a/kernel/sched/alt_core.c b/kernel/sched/alt_core.c
index 2daa6605ccdc..b469a7a9156e 100644
--- a/kernel/sched/alt_core.c
+++ b/kernel/sched/alt_core.c
@@ -3761,7 +3761,7 @@ inline void alt_sched_debug(void) {}
 
 #ifdef	CONFIG_SMP
 
-#define SCHED_RQ_NR_MIGRATION (32UL)
+#define SCHED_RQ_NR_MIGRATION (32U)
 /*
  * Migrate pending tasks in @rq to @dest_cpu
  * Will try to migrate mininal of half of @rq nr_running tasks and
@@ -6248,6 +6248,25 @@ static void calc_load_migrate(struct rq *rq)
 		atomic_long_add(delta, &calc_load_tasks);
 }
 
+static void dump_rq_tasks(struct rq *rq, const char *loglvl)
+{
+	struct task_struct *g, *p;
+	int cpu = cpu_of(rq);
+
+	lockdep_assert_held(&rq->lock);
+
+	printk("%sCPU%d enqueued tasks (%u total):\n", loglvl, cpu, rq->nr_running);
+	for_each_process_thread(g, p) {
+		if (task_cpu(p) != cpu)
+			continue;
+
+		if (!task_on_rq_queued(p))
+			continue;
+
+		printk("%s\tpid: %d, name: %s\n", loglvl, p->pid, p->comm);
+	}
+}
+
 int sched_cpu_dying(unsigned int cpu)
 {
 	struct rq *rq = cpu_rq(cpu);
@@ -6257,7 +6276,10 @@ int sched_cpu_dying(unsigned int cpu)
 	sched_tick_stop(cpu);
 
 	raw_spin_lock_irqsave(&rq->lock, flags);
-	BUG_ON(rq->nr_running != 1 || rq_has_pinned_tasks(rq));
+	if (rq->nr_running != 1 || rq_has_pinned_tasks(rq)) {
+		WARN(true, "Dying CPU not properly vacated!");
+		dump_rq_tasks(rq, KERN_WARNING);
+	}
 	raw_spin_unlock_irqrestore(&rq->lock, flags);
 
 	/*
diff --git a/kernel/sched/alt_sched.h b/kernel/sched/alt_sched.h
index cc2739f843af..192586fee177 100644
--- a/kernel/sched/alt_sched.h
+++ b/kernel/sched/alt_sched.h
@@ -153,7 +153,7 @@ struct rq {
 	u64 last_ts_switch;
 	u64 clock_task;
 
-	unsigned long nr_running;
+	unsigned int  nr_running;
 	unsigned long nr_uninterruptible;
 
 #ifdef CONFIG_SCHED_HRTICK
-- 
2.32.0.93.g670b81a890

