From f3b0ca072563dc17057b0e3233f9972ed1a6ec88 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Wed, 7 Apr 2021 11:43:30 +0800
Subject: [PATCH 135/148] sched/alt: Don't migrate_disable() during migration.

---
 kernel/sched/alt_core.c | 21 ++++++++++++---------
 1 file changed, 12 insertions(+), 9 deletions(-)

diff --git a/kernel/sched/alt_core.c b/kernel/sched/alt_core.c
index 3e79fdc14152..11ffc1cb4528 100644
--- a/kernel/sched/alt_core.c
+++ b/kernel/sched/alt_core.c
@@ -1146,6 +1146,7 @@ __do_set_cpus_allowed(struct task_struct *p, const struct cpumask *new_mask, u32
 void migrate_disable(void)
 {
 	struct task_struct *p = current;
+	int cpu;
 
 	if (p->migration_disabled) {
 		p->migration_disabled++;
@@ -1153,16 +1154,18 @@ void migrate_disable(void)
 	}
 
 	preempt_disable();
-	this_rq()->nr_pinned++;
-	p->migration_disabled = 1;
-	p->migration_flags &= ~MDF_FORCE_ENABLED;
-
-	/*
-	 * Violates locking rules! see comment in __do_set_cpus_allowed().
-	 */
-	if (p->cpus_ptr == &p->cpus_mask)
-		__do_set_cpus_allowed(p, cpumask_of(smp_processor_id()), SCA_MIGRATE_DISABLE);
+	cpu = smp_processor_id();
+	if (cpumask_test_cpu(cpu, &p->cpus_mask)) {
+		cpu_rq(cpu)->nr_pinned++;
+		p->migration_disabled = 1;
+		p->migration_flags &= ~MDF_FORCE_ENABLED;
 
+		/*
+		 * Violates locking rules! see comment in __do_set_cpus_allowed().
+		 */
+		if (p->cpus_ptr == &p->cpus_mask)
+			__do_set_cpus_allowed(p, cpumask_of(cpu), SCA_MIGRATE_DISABLE);
+	}
 	preempt_enable();
 }
 EXPORT_SYMBOL_GPL(migrate_disable);
-- 
2.32.0.93.g670b81a890

