From 5a42b6073bdd8c9f92f9c1e6c1cbda52de95c141 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Thu, 18 Feb 2021 22:19:45 +0800
Subject: [PATCH 112/148] sched/alt: [Sync] 5ba2ffba13a1 sched: Fix CPU hotplug
 / tighten is_per_cpu_kthread()

---
 kernel/sched/alt_core.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/kernel/sched/alt_core.c b/kernel/sched/alt_core.c
index b469a7a9156e..97ae80161672 100644
--- a/kernel/sched/alt_core.c
+++ b/kernel/sched/alt_core.c
@@ -1979,6 +1979,13 @@ static void __ttwu_queue_wakelist(struct task_struct *p, int cpu, int wake_flags
 
 static inline bool ttwu_queue_cond(int cpu, int wake_flags)
 {
+	/*
+	 * Do not complicate things with the async wake_list while the CPU is
+	 * in hotplug state.
+	 */
+	if (!cpu_active(cpu))
+		return false;
+
 	/*
 	 * If the CPU does not share cache, then queue the task on the
 	 * remote rqs wakelist to avoid accessing remote data.
@@ -6165,6 +6172,9 @@ int sched_cpu_deactivate(unsigned int cpu)
 	 * users of this state to go away such that all new such users will
 	 * observe it.
 	 *
+	 * Specifically, we rely on ttwu to no longer target this CPU, see
+	 * ttwu_queue_cond() and is_cpu_allowed().
+	 *
 	 * Do sync before park smpboot threads to take care the rcu boost case.
 	 */
 	synchronize_rcu();
-- 
2.32.0.93.g670b81a890

