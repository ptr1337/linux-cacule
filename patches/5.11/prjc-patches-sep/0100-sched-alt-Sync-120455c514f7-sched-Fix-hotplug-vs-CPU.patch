From b541e0f7a4aab6262f5812e5f72cc1ab8ea1b757 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Sat, 30 Jan 2021 22:58:28 +0800
Subject: [PATCH 100/109] sched/alt: [Sync] 120455c514f7 sched: Fix hotplug vs
 CPU bandwidth control

---
 kernel/sched/alt_core.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/kernel/sched/alt_core.c b/kernel/sched/alt_core.c
index 65d87ca69aff..8b9c3c414120 100644
--- a/kernel/sched/alt_core.c
+++ b/kernel/sched/alt_core.c
@@ -5990,6 +5990,8 @@ int sched_cpu_activate(unsigned int cpu)
 
 int sched_cpu_deactivate(unsigned int cpu)
 {
+	struct rq *rq = cpu_rq(cpu);
+	unsigned long flags;
 	int ret;
 
 	set_cpu_active(cpu, false);
@@ -6011,6 +6013,11 @@ int sched_cpu_deactivate(unsigned int cpu)
 	 */
 	synchronize_rcu();
 
+	raw_spin_lock_irqsave(&rq->lock, flags);
+	update_rq_clock(rq);
+	set_rq_offline(rq);
+	raw_spin_unlock_irqrestore(&rq->lock, flags);
+
 #ifdef CONFIG_SCHED_SMT
 	/*
 	 * When going down, decrement the number of cores with SMT present.
@@ -6094,7 +6101,6 @@ int sched_cpu_dying(unsigned int cpu)
 	sched_tick_stop(cpu);
 
 	raw_spin_lock_irqsave(&rq->lock, flags);
-	set_rq_offline(rq);
 	raw_spin_unlock_irqrestore(&rq->lock, flags);
 
 	/*
-- 
2.30.1.457.gf011795891

