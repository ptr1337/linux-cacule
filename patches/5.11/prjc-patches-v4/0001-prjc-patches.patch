From ff07e47c2572a037e551aceac5a1649afc48d165 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Sun, 14 Mar 2021 17:28:24 +0800
Subject: [PATCH 1/3] sched/alt: Fix limited cpufreq for schedutil.

Here is the first fix for #12, which fix the limited cpufreq for
schedutil. But it still tend to stay at max cpufreq.
---
 kernel/sched/alt_sched.h         |  3 ++-
 kernel/sched/cpufreq_schedutil.c | 13 +++++++++----
 2 files changed, 11 insertions(+), 5 deletions(-)

diff --git a/kernel/sched/alt_sched.h b/kernel/sched/alt_sched.h
index 51f11bf416f4..7bcd96cc6bed 100644
--- a/kernel/sched/alt_sched.h
+++ b/kernel/sched/alt_sched.h
@@ -598,7 +598,8 @@ static inline void cpufreq_update_util(struct rq *rq, unsigned int flags)
 {
 	struct update_util_data *data;
 
-	data = rcu_dereference_sched(*this_cpu_ptr(&cpufreq_update_util_data));
+	data = rcu_dereference_sched(*per_cpu_ptr(&cpufreq_update_util_data,
+						  cpu_of(rq)));
 	if (data)
 		data->func(data, rq_clock(rq), flags);
 }
diff --git a/kernel/sched/cpufreq_schedutil.c b/kernel/sched/cpufreq_schedutil.c
index 0c074c53c60a..c5e3d3839650 100644
--- a/kernel/sched/cpufreq_schedutil.c
+++ b/kernel/sched/cpufreq_schedutil.c
@@ -288,11 +288,16 @@ static void sugov_get_util(struct sugov_cpu *sg_cpu)
 	sg_cpu->util = schedutil_cpu_util(sg_cpu->cpu, cpu_util_cfs(rq), max,
 					  FREQUENCY_UTIL, NULL);
 }
+
 #else /* CONFIG_SCHED_ALT */
-static unsigned long sugov_get_util(struct sugov_cpu *sg_cpu)
+
+static void sugov_get_util(struct sugov_cpu *sg_cpu)
 {
-	sg_cpu->max = arch_scale_cpu_capacity(sg_cpu->cpu);
-	return sg_cpu->max;
+	unsigned long max = arch_scale_cpu_capacity(sg_cpu->cpu);
+
+	sg_cpu->max = max;
+	sg_cpu->bw_dl = 0;
+	sg_cpu->util = cpu_rq(sg_cpu->cpu)->nr_running ? max:0UL;
 }
 #endif
 
@@ -438,8 +443,8 @@ static inline void ignore_dl_rate_limit(struct sugov_cpu *sg_cpu, struct sugov_p
 {
 #ifndef CONFIG_SCHED_ALT
 	if (cpu_bw_dl(cpu_rq(sg_cpu->cpu)) > sg_cpu->bw_dl)
-#endif
 		sg_policy->limits_changed = true;
+#endif
 }
 
 static inline bool sugov_update_single_common(struct sugov_cpu *sg_cpu,
-- 
2.31.0.97.g1424303384


From 73a374661099db43a4ce84b509d9280289d905db Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Sun, 14 Mar 2021 22:23:58 +0800
Subject: [PATCH 2/3] sched/alt: Add is_migration_disabled() checking in
 sg_balance_trigger().

---
 kernel/sched/alt_core.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/kernel/sched/alt_core.c b/kernel/sched/alt_core.c
index 7b99fdbb48df..2c8a0e510490 100644
--- a/kernel/sched/alt_core.c
+++ b/kernel/sched/alt_core.c
@@ -1183,6 +1183,9 @@ void migrate_enable(void)
 {
 	struct task_struct *p = current;
 
+	if (0 == p->migration_disabled)
+		return;
+
 	if (p->migration_disabled > 1) {
 		p->migration_disabled--;
 		return;
@@ -3389,7 +3392,8 @@ static inline int active_load_balance_cpu_stop(void *data)
 	rq->active_balance = 0;
 	/* _something_ may have changed the task, double check again */
 	if (task_on_rq_queued(p) && task_rq(p) == rq &&
-	    cpumask_and(&tmp, p->cpus_ptr, &sched_sg_idle_mask)) {
+	    cpumask_and(&tmp, p->cpus_ptr, &sched_sg_idle_mask) &&
+	    !is_migration_disabled(p)) {
 		int cpu = cpu_of(rq);
 		int dcpu = __best_mask_cpu(cpu, &tmp,
 					   per_cpu(sched_cpu_llc_mask, cpu));
@@ -3417,7 +3421,7 @@ static inline int sg_balance_trigger(const int cpu)
 	curr = rq->curr;
 	res = (!is_idle_task(curr)) && (1 == rq->nr_running) &&\
 	      cpumask_intersects(curr->cpus_ptr, &sched_sg_idle_mask) &&\
-	      (!rq->active_balance);
+	      !is_migration_disabled(curr) && (!rq->active_balance);
 
 	if (res)
 		rq->active_balance = 1;
-- 
2.31.0.97.g1424303384


From 2ccd59006346151061997af2fb938520b4f10778 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Thu, 25 Mar 2021 09:54:19 +0800
Subject: [PATCH 3/3] Project-C v5.11-r3

---
 kernel/sched/alt_core.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/kernel/sched/alt_core.c b/kernel/sched/alt_core.c
index 2c8a0e510490..0066b97100bb 100644
--- a/kernel/sched/alt_core.c
+++ b/kernel/sched/alt_core.c
@@ -52,7 +52,7 @@
  */
 EXPORT_TRACEPOINT_SYMBOL_GPL(pelt_irq_tp);
 
-#define ALT_SCHED_VERSION "v5.11-r2"
+#define ALT_SCHED_VERSION "v5.11-r3"
 
 /* rt_prio(prio) defined in include/linux/sched/rt.h */
 #define rt_task(p)		rt_prio((p)->prio)
-- 
2.31.0.97.g1424303384

