From 879184aa4b38cfc59a91685af74d73bc5a6cf11d Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Tue, 20 Apr 2021 15:56:06 +0200
Subject: [PATCH 098/116] Revert "bfq: disable idle for prio_expire under
 better_fairness"

This reverts commit e5828ec2aabee519fbd15a30a5cd101cf09d112b.

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 block/bfq-iosched.c | 11 -----------
 1 file changed, 11 deletions(-)

diff --git a/block/bfq-iosched.c b/block/bfq-iosched.c
index 13ed0710d..06f1b57c2 100644
--- a/block/bfq-iosched.c
+++ b/block/bfq-iosched.c
@@ -4393,14 +4393,6 @@ static bool bfq_better_to_idle(struct bfq_queue *bfqq)
 	if (unlikely(bfqd->strict_guarantees))
 		return true;
 
-	/*
-	 * In better_fairness mode, we also put emphasis on Qos. The main
-	 * purpose of allowing idle here is to ensure better isolation
-	 * of Buffer IO.
-	 */
-	if (unlikely(bfqd->better_fairness))
-		return !(bfqd->bfq_slice_idle == 0 || bfq_class_idle(bfqq));
-
 	/*
 	 * Idling is performed only if slice_idle > 0. In addition, we
 	 * do not idle if
@@ -4413,9 +4405,6 @@ static bool bfq_better_to_idle(struct bfq_queue *bfqq)
 	   bfq_class_idle(bfqq))
 		return false;
 
-	if (bfq_may_expire_in_serv_for_prio(&bfqq->entity))
-		return false;
-
 	idling_boosts_thr_with_no_issue =
 		idling_boosts_thr_without_issues(bfqd, bfqq);
 
-- 
2.31.1.305.gd1b10fc6d8

